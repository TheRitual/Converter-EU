{"version":3,"sources":["App/Converter/Controls/index.js","App/Converter/Loading/index.js","App/NumCode/index.js","App/Converter/index.js","App/Section/index.js","App/SavedList/index.js","App/Header/index.js","App/Info/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Controls","isDisabled","inputValue","inputOnChange","selectValue","selectOnChange","list","disabled","onChange","step","type","value","min","className","map","item","index","code","Loading","NumCode","number","small","Converter","savedList","setSavedList","changeInfo","useState","source","target","sourceValue","targetValue","converterData","setConverterData","rate","setRate","loading","setLoading","setList","getRates","currency","fetch","then","response","json","currencyList","Object","entries","createList","rates","catch","error","console","setTimeout","useEffect","length","newRate","find","toFixed","onSubmit","event","preventDefault","id","Number","Section","title","children","SavedList","onClick","filter","Header","Info","info","isError","message","App","setInfo","information","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b34da78.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Controls = ({ isDisabled, inputValue, inputOnChange, selectValue, selectOnChange, list }) => {\r\n\r\n    return (\r\n        <>\r\n            <input disabled={isDisabled} onChange={inputOnChange} step=\"any\" type=\"number\" value={inputValue} min=\"0\" className=\"controls__field\" />\r\n            <select className=\"controls__select\" value={selectValue} onChange={selectOnChange}>{\r\n                list.map((item, index) => {\r\n                    return (\r\n                        <option key={index} value={item.code}>\r\n                            {item.code}\r\n                        </option>\r\n                    )\r\n                })\r\n            }</select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Controls;","import \"./style.css\";\r\n\r\nconst Loading = () => (<div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>);\r\n\r\nexport default Loading;","import \"./style.css\";\r\n\r\nconst NumCode = ({ number, code, small }) => (\r\n    <>\r\n        <span className={\"code__value\" + (small ? \" code__value--small\" : \"\")}>{number}</span>&nbsp;\r\n        <span className={\"code \" + (small ? \"code--small\" : \"code--large\")}>\r\n            {code}\r\n        </span>\r\n    </>\r\n);\r\n\r\nexport default NumCode;","import { useState, useEffect } from \"react\";\r\nimport Controls from \"./Controls\";\r\nimport Loading from \"./Loading\";\r\nimport NumCode from \"../NumCode\";\r\nimport \"./style.css\";\r\n\r\nconst Converter = ({ savedList, setSavedList, changeInfo }) => {\r\n\r\n    const [converterData, setConverterData] = useState({\r\n        source: \"EUR\",\r\n        target: \"PLN\",\r\n        sourceValue: 21.37,\r\n        targetValue: 21.37,\r\n    });\r\n\r\n    const [rate, setRate] = useState(21.37);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    const createList = (list) => {\r\n        return Object.entries(list).map(item => {\r\n            return { code: item[0], rate: item[1] }\r\n        });\r\n    }\r\n\r\n    const getRates = (currency) => {\r\n        setLoading(true);\r\n        changeInfo(\"Obtaining rates for \" + currency, false);\r\n        fetch(\"https://api.exchangerate.host/latest?base=\" + currency)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(currencyList => {\r\n                changeInfo(\"I am ready to use!\", false);\r\n                setList(createList(currencyList.rates));\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                changeInfo(\"Can't obtain rates for \" + currency + \". Check console for more information.\", true);\r\n                console.error(error);\r\n                setTimeout(() => getRates(converterData.source), 5000);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (list.length > 0) {\r\n            const newRate = list.find(item => item.code === converterData.target).rate;\r\n            setRate(newRate);\r\n            setConverterData({\r\n                ...converterData,\r\n                targetValue: (converterData.sourceValue * newRate).toFixed(2),\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        getRates(\"EUR\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onSaveList = (event) => {\r\n        event.preventDefault();\r\n        if (!loading) {\r\n            setSavedList([{\r\n                id: savedList.length ? savedList[0].id + 1 : 0,\r\n                source: converterData.source,\r\n                sourceValue: Number(converterData.sourceValue).toFixed(2),\r\n                target: converterData.target,\r\n                targetValue: Number(converterData.targetValue).toFixed(2),\r\n                rate: rate,\r\n            }, ...savedList]);\r\n        }\r\n    }\r\n\r\n    const onSourceChange = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            sourceValue: target.value,\r\n            targetValue: Number(target.value * rate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    const onTargetChange = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            sourceValue: Number(target.value / rate).toFixed(2),\r\n            targetValue: target.value,\r\n        });\r\n    }\r\n\r\n    const onSourceSelect = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            source: target.value,\r\n        });\r\n        getRates(target.value);\r\n    }\r\n\r\n    const onTargetSelect = ({ target }) => {\r\n        const newRate = list.find(item => item.code === target.value).rate;\r\n        setRate(newRate);\r\n        setConverterData({\r\n            ...converterData,\r\n            target: target.value,\r\n            sourceValue: Number(converterData.targetValue / newRate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"converter\" onSubmit={onSaveList}>\r\n            <div className=\"converter__element\">\r\n                <Controls isDisabled={loading} inputValue={converterData.sourceValue} inputOnChange={onSourceChange} selectValue={converterData.source} selectOnChange={onSourceSelect} list={list} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n                <Controls isDisabled={loading} inputValue={converterData.targetValue} inputOnChange={onTargetChange} selectValue={converterData.target} selectOnChange={onTargetSelect} list={list} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n                <NumCode number=\"1\" code={converterData.source} />\r\n                &nbsp;=&nbsp;\r\n                <NumCode number={rate} code={converterData.target} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n                {\r\n                    loading ?\r\n                        <Loading /> :\r\n                        <button className=\"converter__saveButton\">Save</button>\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Converter;","import \"./style.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import NumCode from \"../NumCode\";\r\nimport \"./style.css\"\r\n\r\nconst SavedList = ({ savedList, setSavedList }) => {\r\n    const removeItem = (id) => {\r\n        setSavedList(savedList => savedList.filter(item => item.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setSavedList([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className=\"savedList__clearButton\" onClick={clearList}>Clear List</button>\r\n            <ul className=\"savedList__list\">\r\n                {\r\n                    savedList.map(item =>\r\n                        <li className=\"savedList__item\" key={item.id}>\r\n                            <NumCode number={item.sourceValue} code={item.source} small />\r\n                            <div> ➤ </div>\r\n                            <NumCode number={item.targetValue} code={item.target} small />\r\n                            <button className=\"savedList__removeButton\" onClick={() => removeItem(item.id)}>&#10006;</button>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SavedList;","import \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"header__header\">React EU Converter</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Info = ({ info }) => {\r\n\r\n    return (\r\n        <section className=\"info\">\r\n            <p className={`info__information${info.isError ? \" info__information--error\" : \"\"}`}>\r\n                {info.isError && \"ERROR: \"}\r\n                {info.message}\r\n            </p>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Info;","import { useState } from \"react\";\nimport Converter from \"./Converter\";\nimport Section from \"./Section\";\nimport SavedList from \"./SavedList\";\nimport Header from \"./Header\";\nimport Info from \"./Info\";\nimport \"./style.css\";\n\nconst App = () => {\n  const [info, setInfo] = useState({\n    message: \"Downloading information about exchange rates\",\n    isError: false,\n  });\n\n  const changeInfo = (information, error) => {\n    setInfo({\n      message: information,\n      isError: error,\n    });\n  }\n\n  const [savedList, setSavedList] = useState([]);\n\n  return (\n    <>\n      <main className=\"main\">\n        <Header />\n        <section className=\"container\">\n          <Section title=\"Converter\">\n            <Converter savedList={savedList} setSavedList={setSavedList} changeInfo={changeInfo} />\n          </Section>\n          <Section title=\"Saved List\">\n            <SavedList savedList={savedList} setSavedList={setSavedList} />\n          </Section>\n        </section>\n      </main>\n      <Info info={info} />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}