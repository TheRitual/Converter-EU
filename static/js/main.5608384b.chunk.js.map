{"version":3,"sources":["App/Converter/Loading/index.js","App/Converter/index.js","App/SavedList/index.js","App/Header/index.js","App/Info/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Loading","className","Converter","rate","setRate","getRates","loading","appData","setAppData","savedList","setSavedList","list","setList","onSubmit","event","preventDefault","id","length","source","sourceValue","Number","toFixed","target","targetValue","disabled","onChange","value","step","type","min","map","item","index","code","newRate","find","SavedList","onClick","filter","Header","Info","info","isError","message","App","useState","setInfo","setLoading","changeInfo","information","error","currency","fetch","then","response","json","currencyList","Object","entries","createList","rates","catch","console","setTimeout","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5608384b.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Loading = () => (<div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>);\r\n\r\nexport default Loading;","import Loading from \"./Loading\";\r\nimport \"./style.css\";\r\n\r\nconst Converter = ({ rate, setRate, getRates, loading, appData, setAppData, savedList, setSavedList, list, setList }) => {\r\n    const onSaveList = (event) => {\r\n        event.preventDefault();\r\n        if (!loading) {\r\n            setSavedList([{\r\n                id: savedList.length ? savedList[0].id + 1 : 0,\r\n                source: appData.source,\r\n                sourceValue: Number(appData.sourceValue).toFixed(2),\r\n                target: appData.target,\r\n                targetValue: Number(appData.targetValue).toFixed(2),\r\n                rate: rate,\r\n            }, ...savedList]);\r\n        }\r\n    }\r\n\r\n    const onSourceChange = ({ target }) => {\r\n        setAppData({\r\n            ...appData,\r\n            sourceValue: target.value,\r\n            targetValue: Number(target.value * rate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    const onTargetChange = ({ target }) => {\r\n        setAppData({\r\n            ...appData,\r\n            sourceValue: Number(target.value / rate).toFixed(2),\r\n            targetValue: target.value,\r\n        });\r\n    }\r\n\r\n    const onSourceSelect = ({ target }) => {\r\n        setAppData({\r\n            ...appData,\r\n            source: target.value,\r\n        });\r\n        getRates(target.value);\r\n    }\r\n\r\n    const onTargetSelect = ({ target }) => {\r\n        const newRate = list.find(item => item.code === target.value).rate;\r\n        setRate(newRate);\r\n        setAppData({\r\n            ...appData,\r\n            target: target.value,\r\n            sourceValue: Number(appData.targetValue / newRate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className=\"converter\">\r\n            <h2 className=\"converter__header\">Converter</h2>\r\n            <form className=\"form\" onSubmit={onSaveList}>\r\n                <div className=\"form__element\">\r\n                    <input disabled={loading} onChange={onSourceChange} step=\"any\" type=\"number\" value={appData.sourceValue} min=\"0\" id=\"source\" className=\"form__field\" />\r\n                    <select className=\"form__select\" value={appData.source} onChange={onSourceSelect}>{\r\n                        list.map((item, index) => {\r\n                            return (\r\n                                <option key={index} value={item.code}>\r\n                                    {item.code}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }</select>\r\n                </div>\r\n                <div className=\"form__element\">\r\n                    <input disabled={loading} onChange={onTargetChange} step=\"any\" type=\"number\" value={appData.targetValue} min=\"0\" id=\"target\" className=\"form__field\" />\r\n                    <select className=\"form__select\" value={appData.target} onChange={onTargetSelect}>{\r\n                        list.map((item, index) => {\r\n                            return (\r\n                                <option key={index} value={item.code}>\r\n                                    {item.code}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    } </select>\r\n                </div>\r\n                <div className=\"form__element\">\r\n                    1&nbsp;<span className=\"form__code\">\r\n                        {appData.source}\r\n                    </span>\r\n                    &nbsp;=&nbsp;{rate}&nbsp;\r\n                    <span className=\"form__code\">\r\n                        {appData.target}\r\n                    </span>\r\n                </div>\r\n                <div className=\"form__element\">\r\n                    {\r\n                        loading ?\r\n                            <Loading /> :\r\n                            <button className=\"form__saveButton\">Save</button>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Converter;","import \"./style.css\"\r\n\r\nconst SavedList = ({ savedList, setSavedList }) => {\r\n    const removeItem = (id) => {\r\n        setSavedList(savedList => savedList.filter(item => item.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setSavedList([]);\r\n    }\r\n\r\n    return (\r\n        <section className=\"savedList\">\r\n            <h2 className=\"savedList__header\">Saved Positions</h2>\r\n            <button className=\"savedList__clearButton\" onClick={clearList}>Clear List</button>\r\n            <ul className=\"savedList__list\">\r\n                {\r\n                    savedList.map(item =>\r\n                        <li className=\"savedList__item\" key={item.id}>\r\n                            <div>\r\n                                <span className=\"savedList__value\">{item.sourceValue}</span>&nbsp;\r\n                                <span className=\"savedList__code\">{item.source}</span>&nbsp;\r\n                            </div>\r\n                            <div> ➤ </div>\r\n                            <div>\r\n                                <span className=\"savedList__value\">{item.targetValue}</span>&nbsp;\r\n                                <span className=\"savedList__code\">{item.target}</span>&nbsp;\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"savedList__removeButton\" onClick={() => removeItem(item.id)}>&#10006;</button>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SavedList;","import \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"header__header\">React EU Converter</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Info = ({ info }) => {\r\n\r\n    return (\r\n        <section className=\"info\">\r\n            <p className={`info__information${info.isError ? \" info__information--error\" : \"\"}`}>\r\n                {info.isError && \"ERROR: \"}\r\n                {info.message}\r\n            </p>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Info;","import { useEffect, useState } from \"react\";\nimport Converter from \"./Converter\";\nimport SavedList from \"./SavedList\";\nimport Header from \"./Header\";\nimport Info from \"./Info\";\nimport \"./style.css\";\n\nconst App = () => {\n  const [info, setInfo] = useState({\n    message: \"Downloading information about exchange rates\",\n    isError: false,\n  });\n\n  const [savedList, setSavedList] = useState([]);\n\n  const [appData, setAppData] = useState({\n    source: \"EUR\",\n    target: \"PLN\",\n    sourceValue: 21.37,\n    targetValue: 21.37,\n  });\n\n  const [rate, setRate] = useState(21.37);\n\n  const [loading, setLoading] = useState(true);\n\n  const [list, setList] = useState([]);\n\n  const changeInfo = (information, error) => {\n    setInfo({\n      message: information,\n      isError: error,\n    });\n  }\n\n  const createList = (list) => {\n    return Object.entries(list).map(item => {\n      return { code: item[0], rate: item[1] }\n    });\n  }\n\n  const getRates = (currency) => {\n    setLoading(true);\n    changeInfo(\"Obtaining rates for \" + currency, false);\n    fetch(\"https://api.exchangerate.host/latest?base=\" + currency)\n      .then(response => {\n        return response.json()\n      })\n      .then(currencyList => {\n        changeInfo(\"I am ready to use!\", false);\n        setList(createList(currencyList.rates));\n        setLoading(false);\n      })\n      .catch(error => {\n        changeInfo(\"Can't obtain rates for \" + currency + \". Check console for more information.\", true);\n        console.error(error);\n        setTimeout(() => getRates(appData.source), 5000);\n      });\n  }\n\n  useEffect(() => {\n    if (list.length > 0) {\n      const newRate = list.find(item => item.code === appData.target).rate;\n      setRate(newRate);\n      setAppData({\n        ...appData,\n        targetValue: (appData.sourceValue * newRate).toFixed(2),\n      });\n    }\n    // eslint-disable-next-line\n  }, [list])\n\n  useEffect(() => {\n    getRates(\"EUR\");\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <main className=\"main\">\n        <Header />\n        <section className=\"container\">\n          <Converter\n            rate={rate}\n            loading={loading}\n            setRate={setRate}\n            getRates={getRates}\n            appData={appData}\n            setAppData={setAppData}\n            savedList={savedList}\n            setSavedList={setSavedList}\n            list={list}\n            setList={setList}\n          />\n          <SavedList savedList={savedList} setSavedList={setSavedList} />\n        </section>\n      </main>\n      <Info info={info} />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}