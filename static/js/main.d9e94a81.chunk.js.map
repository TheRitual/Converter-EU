{"version":3,"sources":["App/Converter/Controls/index.js","App/Converter/Loading/index.js","App/NumCode/index.js","App/Converter/Clock/ClockBlock/index.js","App/Converter/Clock/index.js","App/Converter/index.js","App/Section/index.js","App/SavedList/index.js","App/Header/index.js","App/Info/index.js","App/index.js","App/utils/useLocalStorageState.js","reportWebVitals.js","index.js"],"names":["Controls","isDisabled","inputValue","inputOnChange","selectValue","selectOnChange","list","disabled","onChange","step","type","value","min","className","map","item","index","code","Loading","NumCode","number","small","ClockItem","children","ClockSeparator","content","ClockBlock","progress","max","Clock","dateValue","calculatedData","dataString","toLocaleDateString","undefined","month","weekday","day","year","dayProgress","getHours","getMinutes","getSeconds","dateHour","hourProgress","dateMinutes","minutesProgress","dateSecond","secondsProgress","getMilliseconds","Converter","savedList","setSavedList","changeInfo","useState","source","target","sourceValue","targetValue","converterData","setConverterData","rate","setRate","loading","setLoading","setList","Date","appDate","setAppDate","getRates","currency","fetch","then","response","json","currencyList","Object","entries","createList","rates","catch","error","console","setTimeout","useEffect","length","newRate","find","toFixed","intervalId","setInterval","clearInterval","onSubmit","event","preventDefault","id","Number","Section","title","SavedList","onClick","filter","Header","Info","info","isError","message","App","setInfo","keyName","initialValue","localStorageState","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","information","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9e94a81.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Controls = ({ isDisabled, inputValue, inputOnChange, selectValue, selectOnChange, list }) => {\r\n\r\n    return (\r\n        <>\r\n            <input disabled={isDisabled} onChange={inputOnChange} step=\"any\" type=\"number\" value={inputValue} min=\"0\" className=\"controls__field\" />\r\n            <select className=\"controls__select\" value={selectValue} onChange={selectOnChange}>{\r\n                list.map((item, index) => {\r\n                    return (\r\n                        <option key={index} value={item.code}>\r\n                            {item.code}\r\n                        </option>\r\n                    )\r\n                })\r\n            }</select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Controls;","import \"./style.css\";\r\n\r\nconst Loading = () => (<div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>);\r\n\r\nexport default Loading;","import \"./style.css\";\r\n\r\nconst NumCode = ({ number, code, small }) => (\r\n    <>\r\n        <span className={\"code__value\" + (small ? \" code__value--small\" : \"\")}>{number}</span>&nbsp;\r\n        <span className={\"code \" + (small ? \"code--small\" : \"code--large\")}>\r\n            {code}\r\n        </span>\r\n    </>\r\n);\r\n\r\nexport default NumCode;","import \"./style.css\";\r\n\r\nconst ClockBlock = ({ content, progress, max }) => (\r\n    <div className=\"clock__block\">\r\n        <div className=\"clock__number\">\r\n            {content}\r\n        </div>\r\n        <div className=\"clock__progress\">\r\n            <progress className=\"clock__progressBar\" value={progress} max={max} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport const ClockItem = ({ children }) => (\r\n    <div className=\"clock__item\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport const ClockSeparator = ({ content }) => (\r\n    <div className=\"clock__block\">\r\n        <div className=\"clock__number\">\r\n            {content}\r\n        </div>\r\n        <div className=\"clock__progress\">\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default ClockBlock;","import ClockBlock, { ClockItem, ClockSeparator } from \"./ClockBlock\";\r\nimport \"./style.css\";\r\n\r\nconst Clock = ({ dateValue }) => {\r\n\r\n    const calculatedData = {\r\n        dataString: dateValue.toLocaleDateString(undefined, { month: \"numeric\", weekday: \"short\", day: \"numeric\", year: \"numeric\" }),\r\n        dayProgress: dateValue.getHours() * 3600 + dateValue.getMinutes() * 60 + dateValue.getSeconds(),\r\n        dateHour: dateValue.getHours() < 10 ? \"0\" + dateValue.getHours() : dateValue.getHours(),\r\n        hourProgress: dateValue.getMinutes() * 60 + dateValue.getSeconds(),\r\n        dateMinutes: dateValue.getMinutes() < 10 ? \"0\" + dateValue.getMinutes() : dateValue.getMinutes(),\r\n        minutesProgress: dateValue.getSeconds(),\r\n        dateSecond: dateValue.getSeconds() < 10 ? \"0\" + dateValue.getSeconds() : dateValue.getSeconds(),\r\n        secondsProgress: dateValue.getMilliseconds(),\r\n    }\r\n\r\n    return (\r\n        <section className=\"clock\">\r\n            <ClockItem>\r\n                <ClockBlock content={calculatedData.dataString} progress={calculatedData.dayProgress} max=\"86400\" />\r\n            </ClockItem>\r\n            <ClockItem>\r\n                <ClockBlock content={calculatedData.dateHour} progress={calculatedData.hourProgress} max=\"3600\" />\r\n                <ClockSeparator content=\":\" />\r\n                <ClockBlock content={calculatedData.dateMinutes} progress={calculatedData.minutesProgress} max=\"60\" />\r\n                <ClockSeparator content=\".\" />\r\n                <ClockBlock content={calculatedData.dateSecond} progress={calculatedData.secondsProgress} max=\"1000\" />\r\n            </ClockItem>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\nimport Controls from \"./Controls\";\r\nimport Loading from \"./Loading\";\r\nimport NumCode from \"../NumCode\";\r\nimport Clock from \"./Clock\";\r\nimport \"./style.css\";\r\n\r\nconst Converter = ({ savedList, setSavedList, changeInfo }) => {\r\n\r\n    const [converterData, setConverterData] = useState({\r\n        source: \"EUR\",\r\n        target: \"PLN\",\r\n        sourceValue: 21.37,\r\n        targetValue: 21.37,\r\n    });\r\n    const [rate, setRate] = useState(21.37);\r\n    const [loading, setLoading] = useState(true);\r\n    const [list, setList] = useState([]);\r\n    const [appDate, setAppDate] = useState(new Date());\r\n\r\n    const createList = (list) => {\r\n        return Object.entries(list).map(item => {\r\n            return { code: item[0], rate: item[1] }\r\n        });\r\n    }\r\n\r\n    const getRates = (currency) => {\r\n        setLoading(true);\r\n        changeInfo(\"Obtaining rates for \" + currency, false);\r\n        fetch(\"https://api.exchangerate.host/latest?base=\" + currency)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(currencyList => {\r\n                changeInfo(\"I am ready to use!\", false);\r\n                setList(createList(currencyList.rates));\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                changeInfo(\"Can't obtain rates for \" + currency + \". Check console for more information.\", true);\r\n                console.error(error);\r\n                setTimeout(() => getRates(converterData.source), 5000);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (list.length > 0) {\r\n            const newRate = list.find(item => item.code === converterData.target).rate;\r\n            setRate(newRate);\r\n            setConverterData({\r\n                ...converterData,\r\n                targetValue: (converterData.sourceValue * newRate).toFixed(2),\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        getRates(\"EUR\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setAppDate(new Date());\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    const onSaveList = (event) => {\r\n        event.preventDefault();\r\n        if (!loading) {\r\n            setSavedList([{\r\n                id: savedList.length ? savedList[0].id + 1 : 0,\r\n                source: converterData.source,\r\n                sourceValue: Number(converterData.sourceValue).toFixed(2),\r\n                target: converterData.target,\r\n                targetValue: Number(converterData.targetValue).toFixed(2),\r\n                rate: rate,\r\n            }, ...savedList]);\r\n        }\r\n    }\r\n\r\n    const onSourceChange = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            sourceValue: target.value,\r\n            targetValue: Number(target.value * rate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    const onTargetChange = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            sourceValue: Number(target.value / rate).toFixed(2),\r\n            targetValue: target.value,\r\n        });\r\n    }\r\n\r\n    const onSourceSelect = ({ target }) => {\r\n        setConverterData({\r\n            ...converterData,\r\n            source: target.value,\r\n        });\r\n        getRates(target.value);\r\n    }\r\n\r\n    const onTargetSelect = ({ target }) => {\r\n        const newRate = list.find(item => item.code === target.value).rate;\r\n        setRate(newRate);\r\n        setConverterData({\r\n            ...converterData,\r\n            target: target.value,\r\n            sourceValue: Number(converterData.targetValue / newRate).toFixed(2),\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"converter\" onSubmit={onSaveList}>\r\n            <Clock dateValue={appDate} />\r\n            <div className=\"converter__element\">\r\n                <Controls isDisabled={loading} inputValue={converterData.sourceValue} inputOnChange={onSourceChange} selectValue={converterData.source} selectOnChange={onSourceSelect} list={list} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n                <Controls isDisabled={loading} inputValue={converterData.targetValue} inputOnChange={onTargetChange} selectValue={converterData.target} selectOnChange={onTargetSelect} list={list} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n                <NumCode number=\"1\" code={converterData.source} />\r\n                &nbsp;=&nbsp;\r\n                <NumCode number={rate} code={converterData.target} />\r\n            </div>\r\n            <div className=\"converter__element\">\r\n\r\n                {\r\n                    loading ?\r\n                        <Loading /> :\r\n                        <button className=\"converter__saveButton\">Save</button>\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Converter;","import \"./style.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import NumCode from \"../NumCode\";\r\nimport \"./style.css\"\r\n\r\nconst SavedList = ({ savedList, setSavedList }) => {\r\n    const removeItem = (id) => {\r\n        setSavedList(savedList => savedList.filter(item => item.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setSavedList([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className=\"savedList__clearButton\" onClick={clearList}>Clear List</button>\r\n            <ul className=\"savedList__list\">\r\n                {\r\n                    savedList.map(item =>\r\n                        <li className=\"savedList__item\" key={item.id}>\r\n                            <NumCode number={item.sourceValue} code={item.source} small />\r\n                            <div> ➤ </div>\r\n                            <NumCode number={item.targetValue} code={item.target} small />\r\n                            <button className=\"savedList__removeButton\" onClick={() => removeItem(item.id)}>&#10006;</button>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SavedList;","import \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"header__header\">React EU Converter</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Info = ({ info }) => {\r\n    return (\r\n        <section className=\"info\">\r\n            <p className={`info__information${info.isError ? \" info__information--error\" : \"\"}`}>\r\n                {info.isError && \"ERROR: \"}\r\n                {info.message}\r\n            </p>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Info;","import { useState } from \"react\";\nimport Converter from \"./Converter\";\nimport Section from \"./Section\";\nimport SavedList from \"./SavedList\";\nimport Header from \"./Header\";\nimport Info from \"./Info\";\nimport { useLocalStorageState } from \"./utils/useLocalStorageState\";\nimport \"./style.css\";\n\nconst App = () => {\n  const [info, setInfo] = useState({\n    message: \"Downloading information about exchange rates\",\n    isError: false,\n  });\n\n  const changeInfo = (information, error) => {\n    setInfo({\n      message: information,\n      isError: error,\n    });\n  }\n\n  const [savedList, setSavedList] = useLocalStorageState(\"saveList\",[]);\n\n  return (\n    <>\n      <main className=\"main\">\n        <Header />\n        <section className=\"container\">\n          <Section title=\"Converter\">\n            <Converter savedList={savedList} setSavedList={setSavedList} changeInfo={changeInfo} />\n          </Section>\n          <Section title=\"Saved List\">\n            <SavedList savedList={savedList} setSavedList={setSavedList} />\n          </Section>\n        </section>\n      </main>\n      <Info info={info} />\n    </>\n  );\n}\n\nexport default App;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n        // eslint-disable-next-line\r\n    }, [state]);\r\n    return [state, setState];\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}